{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; //Register User\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/api/users/register\", userData).then(function (res) {\n      return history.push(\"/login\");\n    }) //re-direct to login on successful register\n    .catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Login - get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"/api/users/login\", userData).then(function (res) {\n      //Save to localStorage\n      //Set token to localStorage\n      var token = res.data.token;\n      localStorage.setItem(\"jwtToken\", token); //Set token to Auth header\n\n      setAuthToken(token); //Decode token to get user data\n\n      var decoded = jwt_decode(token); //Set current user\n\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; //User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; //Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    //Remove token from local storage\n    localStorage.removeItem(\"jwtoken\"); //Remove auth header for future requests\n\n    setAuthToken(false); //Set current user to empty object {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/brandongunnerson/Desktop/Gril.ly/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SACIC,UADJ,EAEIC,gBAFJ,EAGIC,YAHJ,QAIO,SAJP,C,CAMA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC3DT,IAAAA,KAAK,CACAU,IADL,CACU,qBADV,EACiCH,QADjC,EAEKI,IAFL,CAEU,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KAFb,EAEyC;AAFzC,KAGKC,KAHL,CAGW,UAAAC,GAAG;AAAA,aACNN,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,UADD;AAELc,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CADF;AAAA,KAHd;AASH,GAV2B;AAAA,CAArB,C,CAYP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAb,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC7CT,IAAAA,KAAK,CACAU,IADL,CACU,kBADV,EAC8BH,QAD9B,EAEKI,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT;AACA;AAFS,UAGDS,KAHC,GAGST,GAAG,CAACO,IAHb,CAGDE,KAHC;AAITC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJS,CAKT;;AACApB,MAAAA,YAAY,CAACoB,KAAD,CAAZ,CANS,CAOT;;AACA,UAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B,CARS,CAST;;AACAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,KAbL,EAcKV,KAdL,CAcW,UAAAC,GAAG;AAAA,aACNN,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,UADD;AAELc,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CADF;AAAA,KAdd;AAoBH,GArBgC;AAAA,CAA1B,C,CAuBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,OAAO,EAAI;AACrC,SAAO;AACHR,IAAAA,IAAI,EAAEZ,gBADH;AAEHa,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,SAAO;AACHV,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,IAAMsB,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAlB,QAAQ,EAAI;AACxC;AACAa,IAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB,EAFwC,CAGxC;;AACA3B,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAJwC,CAKxC;;AACAQ,IAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GAPyB;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\n//Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/users/register\", userData)\n        .then(res => history.push(\"/login\")) //re-direct to login on successful register\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//Login - get user token\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/api/users/login\", userData)\n        .then(res => {\n            //Save to localStorage\n            //Set token to localStorage\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            //Set token to Auth header\n            setAuthToken(token);\n            //Decode token to get user data\n            const decoded = jwt_decode(token);\n            //Set current user\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//Set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\n//User loading\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\n//Log user out\nexport const logoutUser = () => dispatch => {\n    //Remove token from local storage\n    localStorage.removeItem(\"jwtoken\");\n    //Remove auth header for future requests\n    setAuthToken(false);\n    //Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}