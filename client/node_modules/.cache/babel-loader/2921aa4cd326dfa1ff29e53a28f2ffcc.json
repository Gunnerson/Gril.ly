{"ast":null,"code":"var _jsxFileName = \"/Users/brandongunnerson/Desktop/Gril.ly/client/src/App.js\";\n// import React, { Component } from 'react';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './App.css';\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\"; //Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  //Set auth token header \n  var token = localStorage.jwtToken;\n  setAuthToken(token); //Decode token and get user info and exp\n\n  var decoded = jwt_decode(token); //Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); //Check for expired token\n\n  var currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    //Logout user\n    store.dispatch(logoutUser()); //Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brandongunnerson/Desktop/Gril.ly/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Provider","store","Navbar","Landing","Register","Login","PrivateRoute","Dashboard","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,SAAP,MAAsB,kCAAtB,C,CAEA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,MAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAZ,EAAAA,YAAY,CAACa,KAAD,CAAZ,CAHyB,CAIzB;;AACA,MAAMC,OAAO,GAAGf,UAAU,CAACc,KAAD,CAA1B,CALyB,CAMzB;;AACAT,EAAAA,KAAK,CAACW,QAAN,CAAed,cAAc,CAACa,OAAD,CAA7B,EAPyB,CASzB;;AACA,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAc,IAAlC;;AACA,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAZ,IAAAA,KAAK,CAACW,QAAN,CAAeb,UAAU,EAAzB,EAF6B,CAI7B;;AACAkB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;;AAED,SAASC,GAAT,GAAe;AACb,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEnB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,YAAzB;AAAsC,IAAA,SAAS,EAAEE,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CADF,CADF;AAkBD;;AAED,eAAea,GAAf","sourcesContent":["// import React, { Component } from 'react';\nimport React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport './App.css';\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n//Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  //Set auth token header \n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  //Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  //Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  //Check for expired token\n  const currentTime = Date.now() /  1000;\n  if (decoded.exp < currentTime) {\n    //Logout user\n    store.dispatch(logoutUser());\n    \n    //Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          \n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n          \n          \n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}